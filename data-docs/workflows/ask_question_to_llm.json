{
  "createdAt": "2024-11-07T13:31:43.825Z",
  "updatedAt": "2024-11-08T14:46:51.243Z",
  "id": "enSdguIiwv2mpGEL",
  "name": "ask_question_to_llm",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": []
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "6570a588-4577-42fb-a5c6-090fa5dc61f8",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -940,
        1080
      ]
    },
    {
      "parameters": {},
      "id": "8f8afcf2-3607-46ae-a3fc-e68d7bf2f959",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1400,
        1080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gemma2:latest",
        "options": {
          "temperature": 0.3
        }
      },
      "id": "c728bd95-8e33-4935-a878-1c7e534e63c6",
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -180,
        1020
      ],
      "credentials": {
        "ollamaApi": {
          "id": "smC31ckuTiI67jHH",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"answer\": \"In this section, you are expected to write the answer in the point of view of the character that replies to the incident handler. You can write it as Character_Surname: Here is my full answer in-character\"\n}"
      },
      "id": "0f2cb025-4e24-4b22-a865-ba8fe08e50e8",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        380,
        980
      ]
    },
    {
      "parameters": {
        "name": "incident_facts",
        "description": "Call this tool to query your assistant if the user's question can be answered by the incident facts of this game. The incident facts are elements specific to the current incident that set additional context. \n\nIf there's an answer provided by this tool, use it to answer the user's question. There's no need to gather additional context if this tool gives you an answer.",
        "workflowId": "OrWDf0Mc6OL9791f",
        "responsePropertyName": "answer",
        "fields": {
          "values": [
            {
              "name": "run_id",
              "stringValue": "={{ $('Edit Fields').item.json.run_id }}"
            },
            {
              "name": "query",
              "stringValue": "={{ $('Edit Fields').item.json.question }}"
            }
          ]
        }
      },
      "id": "2d4f6248-bb15-4186-8bd1-7fe2511b6d5e",
      "name": "Gather Incident Facts",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.1,
      "position": [
        -60,
        1020
      ]
    },
    {
      "parameters": {
        "name": "access_world_facts",
        "description": "Call this tool to interrogate the world facts of this game. \nThe world facts are immutable truths that set the basic rules of this game. They will give world-building information such as the actors in the world, the entity in which the players are working.  They will not contain specific details such as a filesystem's structure, a domain ip, etc.. \n\nYour assistant will answer you with the corresponding world fact if it exists. Else, it will tell you that it's unable to access the information.",
        "workflowId": "1FzoT3wFxB2diofM",
        "responsePropertyName": "answer"
      },
      "id": "b3886e62-9f86-4e57-b8f0-f5fa0929fa6c",
      "name": "Gather World Facts",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.1,
      "position": [
        100,
        1020
      ]
    },
    {
      "parameters": {
        "jsCode": "return {\n  \"run_id\":\"wdwyapsxminadxe5te1u6t7g8w\",\n  \"question\":\"what was the open port on the firewall ?\"\n}"
      },
      "id": "f4b75558-c1a8-4335-bdc5-5b834fc308d5",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1160,
        1080
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fbdd7e34-7bf5-49dd-96e9-43dce83f6964",
              "name": "run_id",
              "value": "={{ $('Edit Fields').item.json.run_id }}",
              "type": "string"
            },
            {
              "id": "cec65522-65bf-46b4-a7c5-697bdcc519cb",
              "name": "user_id",
              "value": "=player",
              "type": "string"
            },
            {
              "id": "72df1f84-d5d0-4486-9d6f-1d9d725463d4",
              "name": "user_query",
              "value": "={{ $('Edit Fields').item.json.question }}",
              "type": "string"
            },
            {
              "id": "2b47d65b-ac59-4e30-8e83-5eabf322285f",
              "name": "bot_answer",
              "value": "={{$json.output.answer}}",
              "type": "string"
            },
            {
              "id": "7cfd5789-8252-42fb-8cca-ec841f896130",
              "name": "created_at",
              "value": "={{ $now }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bb8941d4-9560-45fa-afc6-87cc01b18b46",
      "name": "prepare Query Document",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "user_queries",
        "fields": "run_id,user_id,user_query,bot_answer,created_at",
        "options": {
          "dateFields": "created_at"
        }
      },
      "id": "5b44265d-ba4b-4cd4-b3d8-448f675b42b3",
      "name": "MongoDB",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        680,
        460
      ],
      "credentials": {
        "mongoDb": {
          "id": "Y4GoWOnzopdVAsVe",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "72df1f84-d5d0-4486-9d6f-1d9d725463d4",
              "name": "response",
              "value": "={{ \n\n\n{ \"user_query\":$('prepare Query Document').item.json.user_query, \n\"bot_answer\":$('prepare Query Document').item.json.bot_answer\n\n}\n\n}}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "cacdee24-a654-4423-9778-7becc5560060",
      "name": "prepare Query Document1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        940,
        460
      ]
    },
    {
      "parameters": {
        "workflowId": "HAUnDrntDbvEagc7",
        "options": {}
      },
      "id": "87029cfc-baa5-4825-9a5b-b0df05e8c3da",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -700,
        1080
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Given the input, try to reformulate to the expected JSON document.\n\n{{$json.toJsonString()}}",
        "hasOutputParser": true
      },
      "id": "338fc5b2-af19-4ede-a162-a483e80eb662",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        220,
        760
      ]
    },
    {
      "parameters": {
        "agent": "planAndExecuteAgent",
        "promptType": "define",
        "text": "=You're a game master for an incident response game. \n\nYou are here to provide interaction with the players. You have access to different tools that will allow you to gather information about the world and about the incident. If the question is irrelevant to the incident, you will directly answer that you won't answer irrelevant questions.\n\nIf there is not enough information for you to formulate an answer, you must reply that you are unable to answer.\n\nIf there is, you MUST answer with the information provided by the tools.\n\nYour output will contain the answer in the point of view of the character who's answering.\n\nThe players are playing the following incident (this is the summary they were given initially) :  {{ $json.update_summary }}\n\nHere's what the player is asking :  {{ $('Edit Fields').item.json.question }}\n\nTry to keep your answer short and to not give more information than what was asked.",
        "options": {
          "humanMessageTemplate": "Previous steps: {previous_steps}\n\nCurrent objective: {current_step}\n\n{agent_scratchpad}\n\nYou may extract and combine relevant data from your previous steps when responding to me.\nIf you have a piece of data that allows you to answer, do not call any additional tool."
        }
      },
      "id": "21a199cd-5e54-4826-915e-aa3d4e545c13",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -160,
        760
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "content": "Based on a question, an LLM Agent is trying to answer it with a \"Plan and Execute\" approach"
      },
      "id": "e6dfa63e-6a91-4c7c-8928-a8e166009358",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1180,
        620
      ]
    }
  ],
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Gather Incident Facts": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gather World Facts": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "prepare Query Document": {
      "main": [
        [
          {
            "node": "MongoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB": {
      "main": [
        [
          {
            "node": "prepare Query Document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "prepare Query Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "70fb14d65d1efc3bf383b2aa106e6e224a0ebb0d7bbe904fb212db7a9b65bcf7"
  },
  "pinData": {},
  "versionId": "0c1c98c9-ace6-491f-95fa-ec365ed06834",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-09-04T11:46:07.588Z",
      "updatedAt": "2024-09-04T11:46:07.588Z",
      "id": "BSLOe70dbHfWkB9Q",
      "name": "ai_player"
    },
    {
      "createdAt": "2024-09-04T11:47:12.901Z",
      "updatedAt": "2024-09-04T11:47:12.901Z",
      "id": "LPJPIJ0bjCWWzbE7",
      "name": "tools"
    },
    {
      "createdAt": "2024-11-08T14:40:58.120Z",
      "updatedAt": "2024-11-08T14:40:58.120Z",
      "id": "Dh18CsMn3Lm5Cx7K",
      "name": "delete_me"
    }
  ]
}